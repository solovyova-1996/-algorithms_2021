"""
Задание 4.

Приведены два алгоритма. В них определяется число,
которое встречается в массиве чаще всего.

Сделайте профилировку каждого алгоритма через timeit

Попытайтесь написать третью версию, которая будет самой быстрой и по возможности самой лаконичной.
Сделайте замеры и опишите, получилось ли у вас ускорить задачу.

Без аналитики задание считается не принятым!
"""
from timeit import timeit
from collections import Counter

array = [1, 3, 1, 3, 4, 5, 1]


def func_1():
    m = 0
    num = 0
    for i in array:
        count = array.count(i)
        if count > m:
            m = count
            num = i
    return f'Чаще всего встречается число {num}, ' \
           f'оно появилось в массиве {m} раз(а)'


def func_2():
    new_array = []
    for el in array:
        count2 = array.count(el)
        new_array.append(count2)

    max_2 = max(new_array)
    elem = array[new_array.index(max_2)]
    return f'Чаще всего встречается число {elem}, ' \
           f'оно появилось в массиве {max_2} раз(а)'


########################################################################
# Моя реализация функции определения числа, которое встречается в массиве чаще всего
def func_3():
    num = max(array, key=array.count)
    return f'Чаще всего встречается число {num}, ' \
           f'оно появилось в массиве {array.count(num)} раз(а)'


def func_4():
    num = Counter(array).most_common(1)[0]
    return f'Чаще всего встречается число {num[0]}, ' \
           f'оно появилось в массиве {num[1]} раз(а)'


print(func_1())
print(func_2())
print(func_3())
print(func_4())

print(f'Время выполнения функции: '
      f'{timeit("func_1()", globals=globals(), number=100000)}')
# Время выполнения функции: 0.3237161
print(f'Время выполнения функции: '
      f'{timeit("func_2()", globals=globals(), number=100000)}')
# Время выполнения функции: 0.5183537
print(f'Время выполнения функции: '
      f'{timeit("func_3()", globals=globals(), number=100000)}')
# Время выполнения функции: 0.320145
print(f'Время выполнения функции: '
      f'{timeit("func_4()", globals=globals(), number=100000)}')
# Время выполнения функции: 0.9253249000000001
# вывод: задачу получилось ускорить в func_3(), но не значительно.
# по сравнению с func_1() в func_3() нет цикла и функция count()
# вызывается только для одного элемента масива.
# получилось сократить количество кода и сделать функцию более лаконичной
